// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

RWStructuredBuffer<int> data; 
RWStructuredBuffer<float4> keys;
RWStructuredBuffer<int> finished;

float2 Resolution;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // generates an overlay image for the finished result
    int index = (Resolution.x - 1 - id.y) * Resolution.y + id.x;
    float key = data[index];
    float4 color = keys[key];

    color.a = min(ceil(color.a), finished[index]);
    
    Result[id.xy] = color;
}
